# This is a basic workflow to help you get started with Actions

name: Linting

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: clang-format lint
        # You may pin to the exact commit or the version.
        # uses: DoozyX/clang-format-lint-action@84b814a54950e27ac65a62069802df099405ef77
        uses: DoozyX/clang-format-lint-action@v0.11
        with:
          # Source folder to check formatting
          #source: # optional, default is .
          # Folder to exclude from formatting check
          #exclude: # optional, default is none
          # List of extensions to check
          #extensions: # optional, default is c,h,C,H,cpp,hpp,cc,hh,c++,h++,cxx,hxx
          # Version of clang-format
          clangFormatVersion: 10 # optional, default is 9
          # Formatting style to use
          #style: # optional, default is file
          # Just fix files (`clang-format -i`) instead of returning a diff
          #inplace: # optional
